# vim: set ft=zsh:

export ARCHFLAGS="-arch x86_64"

### Python setup
if [ -x "$(which pyenv)" ]; then
  export PYENV_VIRTUALENV_DISABLE_PROMPT=1
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

### Node.js setup
export NVM_DIR="$(realpath $HOME)/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

### FastLane for Mobile development
[ -s "$HOME/.fastlane/bin" ] && export PATH="$HOME/.fastlane/bin:$PATH"

### Docker Functions
if [ -x "$(which docker-machine)" ]; then
## Switch docker pointer to another host (dmenv my_remote_host)
dmenv () {
  eval "$(docker-machine env $1)"
}
## Execute shell in Docker container
dshell () {
  docker exec -ti $1 /bin/bash
}
## Load 'default' docker machine by default
#dmenv default
fi


### Meteor.js
[ -s "$HOME/.meteor" ] && export PATH="$PATH:$HOME/.meteor"

### Go
[ -s "$HOME/Code/Go" ] && export GOPATH=$HOME/Code/Go

### Ruby/RVM
# see .load_last
# RVM likes its path to come first in $PATH

### Google Cloud SDK
if [ -s "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk" ]; then
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
fi

### Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

### OSX Development
export SIMULATOR_PATH=$HOME/Library/Developer/CoreSimulator/Devices
