[alias]
  st = status
  ci = commit
  co = checkout
  br = branch
  p = push
  l = log
  d = diff
  dst =!git diff --stat
  fixmaster = !git config branch.master.remote origin && git config branch.master.merge refs/heads/master
  cl = !git log --format='format: * %s (%an: %ad) [%h]'
  lcd = !git log -n 1 --format='format: %ad' --no-merges
  hl = !echo "$( git log -n 1 --format='format:%ad' --date=local heroku/master ) - $(git log -n 1 --format='format:%ad' --date=local)" && git cl heroku/master..
  #brcommit = !git commit -m $(git branch 2>/dev/null | grep ^\* | sed -e s/^\*[[:space:]]// | cut -f 1,2 -d \-) && git commit -m
  this = !git cl -n 1
  last = !git log -n 1 | head -n 1 | awk '{print $2}'
  monthlyloc = !echo "Δ: $(git diff $(git log --since '1 month ago' --oneline | awk '{print $1}' | tail -n 1) --stat | tail -n 1 | awk '{print $4 + $6}') loc"
  weeklyloc = !echo "Δ: $(git diff $(git log --since '1 week ago' --oneline | awk '{print $1}' | tail -n 1) --stat | tail -n 1 | awk '{print $4 + $6}') loc"
  dailyloc = !echo "Δ: $(git diff $(git log --since 'yesterday' --oneline | awk '{print $1}' | tail -n 1) --stat | tail -n 1 | awk '{print $4 + $6}') loc"
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = true
[core]
  editor = vim
	excludesfile = /Users/codeprimate/.gitignore_global
[user]
  name = Patrick Morgan
  email = patrick@patrick-morgan.net
[github]
  user = codeprimate
[branch]
  autosetupmerge = true
[push]
  default = upstream
[grep]
  patternType = perl
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustexitcode = true
[merge]
  tool = Kaleidoscope
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
  prompt = false
[mergetool]
  prompt = false
[diff]
  tool = Kaleidoscope
[pager]
  diff = diff-so-fancy | less --tabs=1,5 -RFX
  show = diff-so-fancy | less --tabs=1,5 -RFX
  log = less --tabs=1,5 -RFX
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
